---
layout: post
title:  "What IDE should I use?"
date:   2015-07-02
comments: true
---


<p class="intro">What IDE should I use? Should I buy a Mac? What Linux distro/desktop are you using? I'm sure you have all heard the same questions before.</p>

As programmers we tend to get caught up in what tools we are using. "Oh he uses Eclipse? He must be a terrible coder. Who uses that?". We've all heard it, seen it, or have even thought it. Even if you don't know the thousands of key-combos and code generation features in IntelliJ Idea you will use it. Guess what? It doesn't matter what IDE you use. You could use notepad on a computer running Windows 2000 What matters is the code, not the window it is in. You should use whatever tools you are most productive with, because ultimately tools are supposed to help you become more productive, not less. In this post I will list the tools that I use when coding and how they make me the most productive.

###Atom
Atom is a text editor from Github that is really customizable. You can change not just the theme, but the modules installed, key maps, and complete layout. I use this when I want to code in a language I am good at and not have anything get in my way. It is also good for editing markup (like these blog posts :D). I could write a whole post on the customization options. It is hackable to the core and is open source. If something is there that gets in your way - remove it. With it hitting version 1.0 recently adoption has peaked and I have seen many sublime users switch over and in my opinion it is a valid choice.

###Xcode
I use Xcode because I don't have much of a choice. It is the official IDE for iOS and I'm not convinced on App Code. The navigation system is unique with a bar across the top allowing quick file navigation, and class definitions/documentation is only a click away. Interface builder provides a nice solid way of building interfaces using storyboard files. The IDE does lack several features I've come accustom to, but it gets the job done. The app is OS X only, which I completely understand from Apples perspective, but it would be nice to have on Linux.


###IntelliJ, Netbeans, and Eclipse (Oh My)
Initially when I started learning Java, listening to Buckey Roberts on youtube I downloaded Eclipse. It was a good choice for beginners. (Although for beginners I would personally recommend Netbeans) I later switched to Netbeans. It was just easier to use and I found myself not having to worry about tedious things like I had to in Eclipse. It made me more productive and allowed me to focus on my code more. It also had Java FX support first and was made by Oracle so was the first to support new Java features. In September of 2014 a friend of mine recommended IntelliJ Idea to me. I was quite satisfied with Netbeans, but I tried it out none the less. The automatic code completion, and setup was quite nice. The folks at IntelliJ have made a good IDE with many useful features. The problem is just finding all of them! While my productivity certainly hasn't jumped enormously when switching the many features come in handy.

###Vim and Emacs (The holy war)
I honestly don't use either yet. One day I will learn them, but until then I am fine with Atom.

###Conclusion
We must remember that with all the options out there for text editors and IDE's the core focus of the code must not change. In sports they say "The glove doesn't make the player, the player makes the glove." In programming I say "The IDE isn't definitive of the programmer, the code is." It doesn't have the same ring to it, but is true none the less. The title of this blog should have been 'It's all about the code'. Because at the end of the day the breakthrough algorithm in your code will make you, not the fact that you used Vim over Emacs. (I'm sorry I just had to mention that whole holy war ;) )

To end this off I figured you could use a laugh.

<img src="http://imgs.xkcd.com/comics/real_programmers.png">
